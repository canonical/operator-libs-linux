# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_dir = {toxinidir}/src/
tst_dir = {toxinidir}/tests/
itst_dir = {toxinidir}/tests/integration
lib_dir = {toxinidir}/lib/charms/operator_libs_linux/
all_dir = {[vars]src_dir} {[vars]tst_dir} {[vars]lib_dir}
lxd_name = ops-libs-test

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_dir}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_dir}
    black {[vars]all_dir}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    mypy
    pyproject-flake8
    pep8-naming
    isort
commands =
    # pflake8 wrapper suppports config from pyproject.toml
    pflake8 {[vars]all_dir}
    isort --check-only --diff {[vars]all_dir}
    black --check --diff {[vars]all_dir}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
    pyfakefs
commands =
	coverage run --source={[vars]lib_dir} \
        -m pytest --ignore={[vars]tst_dir}integration -v --tb native {posargs}
    coverage report

[testenv:integration]
description = Build a LXD container for integration tests then run the tests
allowlist_externals = 
    lxc
    bash
commands =
    # Create a LXC container with the relevant packages installed
    bash -c 'lxc launch -qe ubuntu:focal {[vars]lxd_name} -c=user.user-data="$(<{[vars]itst_dir}/test_setup.yaml)"'
    # Wait for the cloud-init process to finish
    lxc exec {[vars]lxd_name} -- bash -c "cloud-init status -w >/dev/null 2>&1"
    # Copy all the files needed for integration testing
    lxc file push -qp {toxinidir}/tox.ini {[vars]lxd_name}/{[vars]lxd_name}/
    lxc file push -qp {toxinidir}/pyproject.toml {[vars]lxd_name}/{[vars]lxd_name}/
    lxc file push -qpr {toxinidir}/lib {[vars]lxd_name}/{[vars]lxd_name}/
    lxc file push -qpr {[vars]tst_dir} {[vars]lxd_name}/{[vars]lxd_name}/
    # Run the tests
    lxc exec {[vars]lxd_name} -- tox -c /{[vars]lxd_name}/tox.ini -e integration-tests {posargs}
commands_post =
    -lxc stop {[vars]lxd_name}

[testenv:integration-tests]
description = Run integration tests
deps =
    pytest
commands =
    pytest -v --tb native --ignore={[vars]tst_dir}unit --log-cli-level=INFO -s {posargs}
